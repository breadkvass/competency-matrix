import React from 'react';
import { View, Text, StyleSheet, useWindowDimensions, DimensionValue } from 'react-native';
import { Link } from 'expo-router';
import { getColor } from '../../constants/colors';
import Container from '../Container/Container';
import FeatureCard from '../featureCard/FeatureCard';

const WelcomeComponent = () => {
  const cardWidth = '48%' as DimensionValue;
  const { height } = useWindowDimensions();
  const containerHeight = Math.min(height * 0.9, 1200);
  const features = [
    {
      icon: "üë§",
      title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
      description: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π. –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –∏ —Å—Ç–∞—Ç—å –µ—ë –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º"
    },
    {
      icon: "üè¢",
      title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏—è–º–∏",
      description: "–î–∏—Ä–µ–∫—Ç–æ—Ä–∞ –º–æ–≥—É—Ç –ø—Ä–∏–≤—è–∑—ã–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ ID. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
    },
    {
      icon: "üìä",
      title: "–ú–∞—Ç—Ä–∏—Ü–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π",
      description: "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –º–∞—Ç—Ä–∏—Ü—ã –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è. –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–∞–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, —Ç–∞–∫ –∏ –≤ –±–∞–∑–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    },
    {
      icon: "üîç",
      title: "–ë–∞–∑–∞ —Ç–∞–ª–∞–Ω—Ç–æ–≤",
      description: "–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ –∫–æ–º–ø–∞–Ω–∏—è–º. –†–µ–∫—Ä—É—Ç–µ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –∏—Ö –º–∞—Ç—Ä–∏—Ü–∞–º –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π"
    }
  ]

  return (
    <Container>
      <View style={[styles.mainLayout, { height: containerHeight }]}>
        <View style={styles.sidebar}>
          <View style={styles.sidebarContent}>
            <Text style={styles.title}>Matrix</Text>
            <Text style={styles.subtitle}>
              –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è–º–∏ –∏ —Ç–∞–ª–∞–Ω—Ç–∞–º–∏
            </Text>
            <View style={styles.buttonsContainer}>
              <Link href="/auth/register" style={styles.primaryButton}>
                <Text style={styles.primaryButtonText}>
                  –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
                </Text>
              </Link>
              
              <Link href="/auth/login" style={styles.secondaryButton}>
                <Text style={styles.secondaryButtonText}>
                  –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏
                </Text>
              </Link>
            </View>
          </View>
        </View>

        <View style={styles.content}>
          <View style={styles.featureCardsRow}>
            {features.map((card, index) => (
              <View key={index} style={[styles.featureCardWrapper, { width: cardWidth }]}>
                <FeatureCard {...card} />
              </View>
            ))}
          </View>
        </View>
      </View>
    </Container>
  );
};

const styles = StyleSheet.create({
  mainLayout: {
    flexDirection: 'row',
    gap: 24,
    padding: 24,
    alignSelf: 'center',
    width: '100%',
  },
  sidebar: {
    width: '30%',
    backgroundColor: getColor('background', 'primary'),
    borderRadius: 16,
    padding: 24,
    shadowColor: getColor('text', 'primary'),
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 5,
    justifyContent: 'center',
  },
  sidebarContent: {
    justifyContent: 'center',
    alignItems: 'center',
  },
  content: {
    flex: 1,
    backgroundColor: getColor('background', 'primary'),
    borderRadius: 16,
    padding: 24,
    shadowColor: getColor('text', 'primary'),
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 5,
    justifyContent: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
    color: getColor('text', 'primary'),
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    textAlign: 'center',
    color: getColor('text', 'secondary'),
    marginBottom: 32,
  },
  featureCardsRow: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    gap: 16,
  },
  featureCardWrapper: {
    marginBottom: 16,
  },
  buttonsContainer: {
    gap: 16,
  },
  primaryButton: {
    backgroundColor: getColor('primary', 'lavender'),
    padding: 16,
    borderRadius: 12,
    shadowColor: getColor('text', 'primary'),
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
  },
  primaryButtonText: {
    color: getColor('text', 'primary'),
    textAlign: 'center',
    fontWeight: '600',
    fontSize: 16,
  },
  secondaryButton: {
    backgroundColor: getColor('background', 'primary'),
    padding: 16,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: getColor('border', 'light'),
  },
  secondaryButtonText: {
    color: getColor('text', 'secondary'),
    textAlign: 'center',
    fontWeight: '600',
    fontSize: 16,
  },
});

export default WelcomeComponent;